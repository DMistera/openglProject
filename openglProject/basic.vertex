#version 330 core

uniform mat4 p_matrix;
uniform mat4 v_matrix;
uniform mat4 m_matrix;

uniform vec4 color = vec4(1,0,0,1);
uniform vec4 lightDir = vec4(0,0,1,0);

layout(location = 0) in vec4 vertexPosition;
layout(location = 1) in vec3 vertexNormal;

out vec4 i_color;

void main(){

	gl_Position = p_matrix*v_matrix*m_matrix*vertexPosition;

    mat4 g_matrix = mat4(inverse(transpose(mat3(m_matrix))));
    vec4 n = normalize(v_matrix*g_matrix*vec4(vertexNormal, 0.0));

    float nl = clamp(dot(n,lightDir),0,1);

    i_color = vec4(color.rgb*nl,color.a);
	
}